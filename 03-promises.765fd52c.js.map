{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,UACnCC,EAAYF,SAASG,iBAAiB,SAEtCC,EAAS,GAYf,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnBbL,EAAUa,SAAQC,IAChBA,EAAQC,iBAAiB,SAASC,IAC5BF,EAAQG,OAASD,EAAME,OAAOD,OAChCf,EAAOY,EAAQG,MAAQE,OAAOH,EAAME,OAAOE,OAC3CC,QAAQC,IAAIR,EAAQG,KAAMD,EAAME,OAAOE,OACvCC,QAAQC,IAAIpB,G,GAEd,IAgBJL,EAAUkB,iBAAiB,SAASC,IAClCA,EAAMO,iBACN,IAAIC,EAAY,EACZC,EAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,OAAOjB,EAAOyB,QAASD,GAAK,EAC9CF,GAAa,EACH,IAANE,IACFD,EAAaN,OAAOjB,EAAOG,QAEzBqB,EAAI,IACND,EAAaN,OAAOjB,EAAOG,OAASc,OAAOjB,EAAO0B,MAAQF,GAE5DvB,EAAcqB,EAAWC,GACtBI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBV,EAAAmC,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBV,EAAAmC,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst buttonRef = document.querySelector('button');\nconst inputRefs = document.querySelectorAll('input');\n\nconst values = {};\n\ninputRefs.forEach(element => {\n  element.addEventListener('input', event => {\n    if (element.name === event.target.name) {\n      values[element.name] = Number(event.target.value);\n      console.log(element.name, event.target.value);\n      console.log(values);\n    }\n  });\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbuttonRef.addEventListener('click', event => {\n  event.preventDefault();\n  let amountPos = 0;\n  let delayCount = 0;\n  for (let i = 0; i < Number(values.amount); i += 1) {\n    amountPos += 1;\n    if (i === 0) {\n      delayCount = Number(values.delay);\n    }\n    if (i > 0) {\n      delayCount = Number(values.delay) + Number(values.step) * i;\n    }\n    createPromise(amountPos, delayCount)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$buttonRef","document","querySelector","$47d4ff9957288465$var$inputRefs","querySelectorAll","$47d4ff9957288465$var$values","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","forEach","element","addEventListener","event","name","target","Number","value","console","log","preventDefault","amountPos","delayCount","i","amount","step","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.765fd52c.js.map"}